@page "/mapa"
@rendermode InteractiveServer

<PageTitle>Mapa</PageTitle>
<nav class="navbar navbar-expand-lg" style="z-index:1;background-color:rgba(240,240,240,1); background-size:cover">
    <a class="navbar-brand" href="/">SolarSoft</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
        <div class="navbar-nav">
            <a class="nav-item nav-link" href="/">Nueva Instalación</a>
            <a class="nav-item nav-link" href="/nuevoPanel">Nuevo Panel</a>
            <a class="nav-item nav-link" href="/mapa">Mapa</a>
        </div>
    </div>
</nav>
@if (HaCargado)
{
    <script type='text/javascript'>
        function GetMap() {
            var map = new Microsoft.Maps.Map('#myMap');

            //Create a random 5 sided polyogn that fills a decent portion of the map.
            var polygon = Microsoft.Maps.TestDataGenerator.getPolygons(1, map.getBounds(), 1,1);

            //Add some metadata to the shape.
            polygon.metadata = {
                value: 'hello world'
            };


            //Load the DrawingTools module
            Microsoft.Maps.loadModule('Microsoft.Maps.DrawingTools', function () {
                //Create an instance of the DrawingTools class and bind it to the map.
                var tools = new Microsoft.Maps.DrawingTools(map);
                 
                //Show the drawing toolbar and enable editting on the map.
                tools.showDrawingManager(function (manager) {
                    //Store a reference to the drawing manager as it will be useful later.
                    drawingManager = manager;

                    //Add polygon to drawing canvas.
                    drawingManager.add(polygon);
                })
            });
@*             Microsoft.Maps.loadModule("Microsoft.Maps.SpatialMath", function () {
                var bounds = map.getBounds();

                var northWest = bounds.getNorthwest();
                var southEast = bounds.getSoutheast();
            } *@
        }
        function getShapes() {
            var shapes = drawingManager.getPrimitives();

            if (shapes && shapes.length > 0) {
                alert('Retrieved ' + shapes.length + ' from the drawing manager.');
                Microsoft.Maps.SpatialMath.Geometry.centroid()
@*                 fromShapes(shapes: shapes); *@
            } else {
                alert('No shapes in the drawing manager.');
            }
        }
        function getMetadata() {
            var shapes = drawingManager.getPrimitives();

            if (shapes && shapes.length > 0) {
                if (shapes[0].metadata) {
                    alert('Shapes metadata: ' + shapes[0].metadata.value);
                } else {
                    alert('No metadata in shape.');
                }
            } else {
                alert('No shapes in the drawing manager.');
            }
        }
    </script>
}
<div class="row" style="height:100vh">
    <div class="col-sm-12">
        <div id="myMap" style="width:auto"></div>
        <input type="button" value="Get Metadata" onclick="getMetadata()" />
    </div>
</div>
@code {
    private bool HaCargado { get; set; } = false;

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            HaCargado = true;
            StateHasChanged();
        }
        return base.OnAfterRenderAsync(firstRender);
    }

}